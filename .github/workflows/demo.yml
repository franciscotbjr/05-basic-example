name: Deploy website
on:
  push:
    branches:
      - main

env:
  app_name: "teste-monitoring-service"
  aws_region: "teste"
  dockerfilePath: "dockerfiles/Dockerfile"
  namespace: "green-monitoring"
  value_stream: "demo"
  infra: "test"

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      energy-estimation: |
        "{
          \"jobId\":\"${{ github.job }}\", 
          \"energyResults\": ${{ steps.energyResults.outputs.energyResults }}
        }"
    permissions:
      actions: read
    steps:
      - name: Initialize Energy Estimation
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
          task: start-measurement
          display-graph: false
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modudes-${{ hashFiles('**/package-lock.json') }}  
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
    
      - name: Setup Python Measurment
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
          task: get-measurement
          label: 'python setup'
          send-data: false
      - name: Echo Prev
        run: echo $ECO_CI_MEASUREMENT_TABLE_LINES
      # - name: Create Energy Results
      #   uses: green-coding-berlin/eco-ci-energy-estimation@v1
      #   with:
      #     task: display-results
      #     send-data: false
      #     display-graph: false
      #     display-badge: false
      - name: Echo Total
        id: energyResults
        run: |
          IFS='| ' read -a arr <<< $ECO_CI_MEASUREMENT_TABLE_LINES;

          ENERGY_RESULTS=$( jq -n \
              --arg cp ${arr[3]} \
              --arg ej ${arr[4]} \
              --arg pw ${arr[5]} \
              '{cpuAvgPercent: $cp, energyJoules: $ej, powerAvgWatts: $pw}' )

          echo $ENERGY_RESULTS

          echo 'energyResults=$ENERGY_RESULTS' >> $GITHUB_OUTPUT ';'

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   outputs:
  #     script-file: ${{ steps.publish.outputs.script-file }}
  #     energy-estimation: |
  #       \"{
  #         \"jobId\":\"${{ github.job }}\", 
  #         \"energyResults\": ${{ toJSON(steps.energyResults.outputs.data-total-json) }} 
  #       }\"
  #   permissions:
  #     actions: read
  #   steps:
  #     - name: Initialize Energy Estimation
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: start-measurement
  #         display-graph: false
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.npm
  #         key: deps-node-modudes-${{ hashFiles('**/package-lock.json') }} 
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build website
  #       run: npm run build
  #     - name: Publish JS filename
  #       id: publish
  #       run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
  #     - name:  Upload artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist-files
  #         path: |
  #           dist
  #           package.json

  #     - name: Setup Python Measurment
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: get-measurement
  #         label: 'python setup'
  #         send-data: false
  #     - name: Create Energy Results
  #       id: energyResults
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: display-results
  #         send-data: false
  #         display-graph: false
  #         display-badge: false
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   outputs:
  #     energy-estimation: |
  #       \"{
  #         \"jobId\":\"${{ github.job }}\", 
  #         \"energyResults\": ${{ toJSON(steps.energyResults.outputs.data-total-json) }} 
  #       }\"
  #   permissions:
  #     actions: read
  #   steps:
  #     - name: Initialize Energy Estimation
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: start-measurement
  #         display-graph: false
  #     - name: Get build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist-files
  #     - name: Output contents
  #       run: ls
  #     - name: Output filename
  #       run: echo "${{ needs.build.outputs.script-file }}"
  #     - name: Deploy
  #       run: echo "Deploying..."

  #     - name: Setup Python Measurment
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: get-measurement
  #         label: 'python setup'
  #         send-data: false
  #     - name: Create Energy Results
  #       id: energyResults
  #       uses: green-coding-berlin/eco-ci-energy-estimation@v1
  #       with:
  #         task: display-results
  #         send-data: false
  #         display-graph: false
  #         display-badge: false

  send-ci-energy-estimation:
    name: Send Ci Energy Estimation
    runs-on: ubuntu-latest
    needs: [test]
    # needs: [test,build,deploy]
    steps: 
      - name: Print JSON Energy Results
        run: echo ${{ needs.test.outputs.energy-estimation }}
        # run: echo "{\"sourceType\":\"CI\", \"application\":\"${{ env.app_name }}\", \"infra\":\"${{ env.infra }}\", \"region\":\"${{ env.aws_region }}\", \"namespace\":\"${{ env.namespace }}\", \"owner\":\"${{ env.value_stream }}\", \"datetime\":\"$(date +"%Y-%m-%d %T")\", \"data\":[${{ needs.test.outputs.energy-estimation }}, ${{  needs.build.outputs.energy-estimation  }}, ${{  needs.deploy.outputs.energy-estimation }}]}"
